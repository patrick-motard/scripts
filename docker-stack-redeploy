#!/usr/bin/env bash
usage="
NAME
      docker-stack-redeploy

SYNOPSIS
      docker-stack-redeploy [-h] [-c compose-file name] -n name

      (re)deploys stack to the swarm, will keep trying with backoff until successful.


ARGUMENTS

       -n name (required)
          Name of the stack in the Swarm.

          Example:
              docker-stack-redeploy -n my-application-stack

       [-f compose-file name] (optional)
          name of the compose file. Defaults to compose-stack.yaml

          Example:
              docker-stack-redeploy -f my-file.yaml -n my-application-stack

INSTALLATION:
      Assuming you have the following in your ~/.ssh/config file

            Host {my-swarm-manager-host}
            User {some-user}
            HostName {manager-node-public-ip}
            IdentityFile ~/.ssh/{my-private-key-or-pem}

      Copy this script to a location in your swarm manager nodes $PATH for the user you're sshing into:

          Example: scp docker-stack-redeploy my-swarm-manager-server-host:/dir/in/$PATH/

      You can then call the script in the directory where your .yaml stack file is.
"

while test $# -gt 0; do
	  case "$1" in
        -h|--help|-\?)
            echo "$usage" >&2
            exit
            ;;
        -n|--name|-\?)
            name=$2
            shift
            ;;
        -f|--file)
            file=$2
            shift
            ;;
        \?)
            echo "Invalid option: -$OPTARG" >&2
            exit 1
            ;;
        *)
            break
    esac
    shift
done

if [ -z ${name} ]; then
    echo "name must be set using -n or --name"
    exit 1
fi
if [ -z ${file} ]; then
    echo "NOTICE: -f not set, compose stack file defaulted to compose-stack.yaml"
    file="compose-stack.yaml"
fi

k=1
i=0

while [ $k == 1 ]
do
    i=$((i+1))
    echo attempt $i
	  sudo docker stack rm $name && sudo docker stack deploy -c $file --with-registry-auth $name
	  k=$?
    if [[ $k == 0 ]]; then
        echo "finished!"
        exit 0
    fi
    echo "waiting for $((i+i+1)) seconds"
    sleep $((i+i+1))
done
